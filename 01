#!/bin/bash
# ODROID-XU_DEBIAN.sh


MACADDR=EE:E6:DC:97:50:22





TEMP_LOG="/tmp/ODROID-XU.build"
WORKDIR=/tmp/ODROID-XU/
TARGET=/mnt/target
ROOTFS=/media/sza/ROOTFS
ARCH=armhf
DISTRIB=jessie
K_VERSION=3.4.104

#Create partitions on card
function CreatePartitions()
{
    echo "      [*] Clear install: Preparing $SDCARD ..."
    echo "wipe card first sectors ..."
    sudo partprobe  >> $TEMP_LOG
    sudo dd if=/dev/zero of=$SDCARD bs=4M count=1 >> $TEMP_LOG 2>&1
    sync >> $TEMP_LOG 2>&1
    rm -Rf boot boot.tar.gz >> $TEMP_LOG 2>&1
    echo "Fuse card ..."
    wget http://builder.mdrjr.net/tools/uboot-xu.tar
    tar -xf uboot-xu.tar >> $TEMP_LOG 2>&1
    cd uboot-xu
    echo "      [*] Fusing media"
    chmod +x fusing.sh  >> $TEMP_LOG 2>&1
    sudo ./fusing.sh $SDCARD  >> $TEMP_LOG 2>&1
    cd $WORKDIR
#    echo "      [*] Create partition schema"

# opis do sd 16GB
     # n 
     # p 
     # 1  
     # +64M
####
     # n 
     # p 
     # 2
     # +14G
#### 
     # n
     # p
     # 3
     # +791M
     # w   
####   
    fdisk $SDCARD 



#    sudo partprobe  >> $TEMP_LOG 2>&1
#    echo "      [*] Format partition and set attributes"

    sudo mkfs.vfat -n BOOT $SDCARD"1" >> $TEMP_LOG 2>&1
    sudo mkfs.ext4 -L ROOTFS $SDCARD"2" >> $TEMP_LOG 2>&1
    sudo mkswap -L ROOTFS $SDCARD"3" >> $TEMP_LOG 2>&1
    sudo tune2fs -o journal_data_writeback $SDCARD"2" >> $TEMP_LOG 2>&1
    sudo tune2fs -O ^has_journal $SDCARD"2" >> $TEMP_LOG 2>&1
    #set parition uuid for some kernel update scripts
    sudo tune2fs $SDCARD"2" -U e6c1b4a6-f773-4ea7-b83b-75b40866412e >> $TEMP_LOG 2>&1
    sudo e2fsck -f $SDCARD"2" >> $TEMP_LOG 2>&1
    sudo dosfslabel $SDCARD"1" BOOT >> $TEMP_LOG 2>&1
    sudo e2label $SDCARD"2" ROOTFS >> $TEMP_LOG 2>&1
    sudo dumpe2fs $SDCARD"2" | head >> $TEMP_LOG 2>&1
    echo "      [*] CARD prepared"

}


function BootstrapDebian()
{
    sudo mkdir -p -v $TARGET/ >> $TEMP_LOG 2>&1
    sudo mount -v -t ext4 $SDCARD"2" $TARGET/ >> $TEMP_LOG 2>&1
    echo "      [*] Bootstraping - this could take a while ..."
    sudo qemu-debootstrap --foreign --arch=$ARCH $DISTRIB $TARGET/ http://http.debian.net/debian >> $TEMP_LOG 2>&1
    sudo sh -c "echo 'T0:23:respawn:/sbin/getty -L ttySAC1 115200 vt100'>> $TARGET'/etc/inittab'" >> $TEMP_LOG 2>&1
    sudo sh -c "echo 'ttySAC1'>> $TARGET'/etc/securetty'" >> $TEMP_LOG 2>&1


    cat <<__EOF__ | sudo tee $TARGET'/etc/apt/sources.list'
deb http://ftp.pl.debian.org/debian/ $DISTRIB main non-free contrib 
deb-src http://ftp.pl.debian.org/debian/ $DISTRIB main non-free contrib 

deb http://security.debian.org/ $DISTRIB/updates main non-free contrib 
deb-src http://security.debian.org/ $DISTRIB/updates main non-free contrib 

# jessie-updates, previously known as 'volatile'
deb http://ftp.pl.debian.org/debian/ $DISTRIB-updates main non-free contrib  
deb-src http://ftp.pl.debian.org/debian/ $DISTRIB-updates main non-free contrib 
__EOF__


cat <<__EOF__ | sudo tee $TARGET'/etc/apt/sources.list.d/backports.list'
deb http://ftp.pl.debian.org/debian $DISTRIB-backports main non-free contrib 
deb-src http://ftp.pl.debian.org/debian $DISTRIB-backports main non-free contrib 
__EOF__

sudo sh -c "echo $TARGETNAME> $TARGET'/etc/hostname'"

cat <<__EOF__ | sudo tee $TARGET'/etc/network/interfaces'
# The loopback network interface
auto lo
iface lo inet loopback
iface lo inet6 loopback

# eth0 network interface
auto eth0
allow-hotplug eth0
iface eth0 inet dhcp
__EOF__

cat <<__EOF__ | sudo tee $TARGET'/etc/sysctl.d/local.conf'
# automatic reboot on kernel panic (5 secs)
panic = 5

# disable IPv6
##net.ipv6.conf.all.disable_ipv6 = 1
##net.ipv6.conf.default.disable_ipv6 = 1
##net.ipv6.conf.lo.disable_ipv6 = 1
__EOF__

cat <<__EOF__ | sudo tee $TARGET'/etc/fstab'
LABEL=ROOTFS / ext4  errors=remount-ro,defaults,noatime,nodiratime 0 1
LABEL=BOOT /boot vfat defaults,rw,owner,flush,umask=000 0 0
tmpfs /tmp tmpfs nodev,nosuid,mode=1777 0 0

__EOF__

    sudo sh -c "echo $MACADDR> $TARGET'/etc/smsc95xx_mac_addr'"

    sudo sh -c "echo 'exit 101'> $TARGET'/usr/sbin/policy-rc.d'"
    sudo chmod -v +X $TARGET'/usr/sbin/policy-rc.d'
    # Set root password
    clear
    echo "Set password for ROOT:"
    sudo chroot $TARGET/ sh -c "passwd root"

    sudo wget -O $TARGET'/usr/local/bin/odroid-utility.sh' https://raw.githubusercontent.com/mdrjr/odroid-utility/master/odroid-utility.sh
    sudo chmod +x $TARGET'/usr/local/bin/odroid-utility.sh' >> $TEMP_LOG 2>&1

    sudo mount -v -o bind /dev $TARGET'/dev'
    sudo mount -v -o bind /dev/pts $TARGET'/dev/pts'
    sudo mount -v -o bind /sys $TARGET'/sys'
    sudo mount -v -t proc proc $TARGET'/proc'
#####apt-get install
    DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true LC_ALL=C LANGUAGE=C LANG=C sudo chroot $TARGET apt-get update >> $TEMP_LOG 2>&1

    DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true LC_ALL=C LANGUAGE=C LANG=C sudo chroot $TARGET apt-get install -y lsb-release initramfs-tools tzdata locales u-boot-tools iptables  ntp sudo openssh-server curl bash-completion  unrar-free unace unrar unalz unar p7zip-rar patool xz-utils xzdec zp file-roller tar wget mc nano  >> $TEMP_LOG 2>&1
#####



    sudo cp $TARGET'/etc/initram-fs/initramfs.conf.dpkg-new' $TARGET'/etc/initram-fs/initramfs.conf'
    sudo cp $TARGET'/etc/initram-fs/update-initramfs.conf.dpkg-new' $TARGET'/etc/initram-fs/update-initramfs.conf'

}


function PutKernelAndFirmware_U3()
{
    echo "      [*] Install kernel and modules ..."
    sudo mount -v -t vfat $SDCARD"1" $TARGET'/boot'


################################################################################################################################################################################
                                                                                                                                                                               #

################## boot/boot.ini
cat <<__EOF__ | sudo tee $TARGET'/boot/boot.ini'
#------------------------------------------------------------------------------------------------------
#
# Boot.ini text file template
#
#------------------------------------------------------------------------------------------------------
#
# boot.ini identification
#
#------------------------------------------------------------------------------------------------------
ODROIDXU-UBOOT-CONFIG

# Verify if u-boot is up-to-date to receive new Kernel
setenv hk_current_version "2"
setenv verify 'if test $hk_version != $hk_current_version;then;fatload mmc 0:1 40008000 u-boot.bin;emmc open 0;movi w z u 0 40008000;emmc close 0;setenv hk_version $hk_current_version;save;reset;fi'
run verify

# U-Boot Parameters
setenv initrd_high "0xffffffff"
setenv fdt_high "0xffffffff"

#------------------------------------------------------------------------------------------------------
#
# Boot Specific Stuff
# Ubuntu
setenv bootrootfs "console=tty1 console=ttySAC2,115200n8 root=UUID=e139ce78-9841-40fe-8823-96a304a09859 rootwait ro"

# Android
# setenv bootroofs "root=/dev/mmcblk0p2 rw rootfstype=ext4 init=/init console=ttySAC2,115200n8 vmalloc=512M"                                              

#------------------------------------------------------------------------------------------------------
#
# Frame buffer size.
# Example.. If you are on LCD Kit set the values bellow to:
# x = 1280 and y = 800
# Otherwise please set this value below to your wanted resolution
# Values:
# LCD Kit: x = 1280   y = 800
#  ---------------------------
# HDMI:
#    480: x = 720    y = 480
#    576: x = 720    y = 576
#    720: x = 1280   y = 720
#   1080: x = 1920   y = 1080
#
#------------------------------------------------------------------------------------------------------
setenv fb_x_res     "1280"
setenv fb_y_res     "720"

#------------------------------------------------------------------------------------------------------
#
# Controls the Board Output Method.
# Valid values are: lcd dp hdmi dvi
#
#------------------------------------------------------------------------------------------------------
setenv vout         "hdmi"

#------------------------------------------------------------------------------------------------------
#
# FB Control
#
#------------------------------------------------------------------------------------------------------
setenv left     "56"
setenv right    "24"
setenv upper    "3"
setenv lower    "3"
setenv hsync    "14"
setenv vsync    "3"

setenv fb_control "left=${left} right=${right} upper=${upper} lower=${lower} vsync=${vsync} hsync=${hsync}"

#------------------------------------------------------------------------------------------------------
#
# Ĺ×˝şĆŽ ľÇžîÁř ¸đ´ĎĹÍŔÇ parameter°ŞŔÔ´Ď´Ů. Ŕ§ °ŞŔť źłÁ¤ÇŇ ś§ Âü°íÇĎżŠ ťçżëÇŐ´Ď´Ů.
#
#------------------------------------------------------------------------------------------------------
#
# AOC I2269V 22" (1920 X 1080)
# left = 56, right = 24, upper = 3, lower = 3, hsync = 14, vsync = 3
#
#------------------------------------------------------------------------------------------------------
#
# YAMAKASI Monitor 27" (2560 X 1440)
# left = 15, right = 10, upper = 10, lower = 10, hsync = 10, vsync = 10,
#
#------------------------------------------------------------------------------------------------------
#
# X-Star Monitor 27" (2560 X 1440)
# left = 56, right = 24, upper = 3, lower = 3, hsync = 14, vsync = 3,
#
#------------------------------------------------------------------------------------------------------
#
# LG Monitor 27" (2560 * 1080)
#
# left = 56, right = 248, upper = 3, lower = 3, hsync = 144, vsync = 3,
# left = 100, right = 100, upper = 100, lower = 100, hsync = 100, vsync = 100,
#
#------------------------------------------------------------------------------------------------------

#------------------------------------------------------------------------------------------------------
#
# Forces a fixed resolution on the HDMI controller. Please make sure that your screen supports and
# It matchs the resolution above! setted the X and Y
# valid values are: 480p60hz 720p60hz 720p50hz 1080p60hz 1080i60hz 1080i50hz 1080p50hz
#		    1080p30hz 1080p25hz 1080p24hz
#
#------------------------------------------------------------------------------------------------------
setenv hdmi_phy_res "720p60hz"

#------------------------------------------------------------------------------------------------------
#
# System Status LED: Blink the RGB LED or disable it
# valid values: 1 off
#
#------------------------------------------------------------------------------------------------------
setenv led_blink    "1"

#------------------------------------------------------------------------------------------------------
#
# U-Boot bootcmd command
#  
#------------------------------------------------------------------------------------------------------
# Android
# setenv bootcmd "movi r k 0:1 40008000; bootz 0x40008000"
# Ubuntu
setenv bootcmd "fatload mmc 0:1 0x40008000 zImage; fatload mmc 0:1 0x42000000 uInitrd; bootz 0x40008000 0x42000000"

#------------------------------------------------------------------------------------------------------
#
# Kernel boot arguments
#
#------------------------------------------------------------------------------------------------------
setenv bootargs "${bootrootfs} ${fb_control} fb_x_res=${fb_x_res} fb_y_res=${fb_y_res} vout=${vout} hdmi_phy_res=${hdmi_phy_res} led_blink=${led_blink}"

# Boot the board
boot
__EOF__
                                                                                                                                                                          #
###########################################################################################################################################################################





#    sudo mkimage -A ARM -T script -n "boot.scr for ROOTFS" -d $TARGET'boot/boot.script' $TARGET'boot/boot.scr'
######################################################################################################################
#####################################################                                                                #
    ####mkdir                                                                                                        #
    sudo  mkdir $TARGET/lib/firmware                                                                                 #
    #                                                                                                                #
    cd  $TARGET'/tmp/'                                                                                               #
    #######                                                                                                          #
    ## wget odroidxu.tar.xz ## kernet 3.4.104                                                                        #                         
    sudo wget http://builder.mdrjr.net/kernel-3.4/2014.11.18-11.34/odroidxu.tar.xz                                   #
                                                                                                                     #
    sudo unxz  $TARGET/tmp/odroidxu.tar.xz                                                                           #
    sudo tar -xvf  $TARGET/tmp/odroidxu.tar -C   $TARGET/                                                            #  
                                                                                                                     #
    #######                                                                                                          #       
    ## wget firmware.tar.xz                                                                                          #     
    sudo wget http://builder.mdrjr.net/tools/firmware.tar.xz                                                         #                                                               #
                                                                                                                     #
    sudo unxz  $TARGET/tmp/firmware.tar.xz                                                                           #                                                                                            
    tar -xvf   $TARGET/tmp/firmware.tar -C  $TARGET/lib/firmware/                                                    #
                                                                                                                     #
    ######                                                                                                           #      
    ## wget debian_hwcomposer.tar                                                                                    #
    sudo wget http://builder.mdrjr.net/tools/debian_hwcomposer.tar                                                   #
                                                                                                                     #
    tar -xvf $TARGET/tmp/debian_hwcomposer.tar -C  $TARGET/usr/                                                      #
######################################################################################################################
## remove odroidxu.tar.xz / firmware.tar.xz / debian_hwcomposer.tar

#    LC_ALL=C LANGUAGE=C LANG=C sudo chroot $TARGET/ rm -r  /tmp/odroidxu.tar.xz >> $TEMP_LOG 2>&1
#    LC_ALL=C LANGUAGE=C LANG=C sudo chroot $TARGET/ rm -r  /tmp/firmware.tar.xz  >> $TEMP_LOG 2>&1
#    LC_ALL=C LANGUAGE=C LANG=C sudo chroot $TARGET/ rm -r /tmp/debian_hwcomposer.tar  >> $TEMP_LOG 2>&1
####################################################################################################################################################
    export K_VERSION=`ls $TARGET'/lib/modules/'`
    LC_ALL=C LANGUAGE=C LANG=C sudo chroot $TARGET/ update-initramfs -c -k $K_VERSION
    sudo mkimage -A arm -O linux -T ramdisk -C none -a 0 -e 0 -n "uInitrd $K_VERSION" -d $TARGET"/boot/initrd.img-$K_VERSION" $TARGET'/boot/uInitrd'
####################################################################################################################################################


##################### >> EOF $TARGET/etc/init.d/exynos5-hwcomposer

cat <<__EOF__ | sudo tee $TARGET'/etc/init.d/exynos5-hwcomposer'
#!/bin/bash
# Hardkernel Co, Ltd.

touch /var/lock/exynos5-hwcomposer

start_hw_composer() {
	echo "Starting Exynos5 HW Composer"
	/usr/bin/exynos5-hwcomposer > /dev/null 2>&1 &
}

stop_hw_composer() {
	echo "Stopping Exynos5 HW Composer"
	killall -9 exynos5-hwcomposer
}

case "$1" in
	start)
		start_hw_composer
		;;
	stop)
		stop_hw_composer
		;;
	restart)
		stop_hw_composer
		start_hw_composer
		;;
	*)
		echo "Usage: /etc/init.d/exynos5-hwcomposer {start|stop|restart}"
		exit 1
		;;
esac

exit 0
__EOF__

####

##################### update-rc.d exynos5-hwcomposer defaults
LC_ALL=C LANGUAGE=C LANG=C sudo chroot $TARGET/ chmod +x /etc/init.d/exynos5-hwcomposer
LC_ALL=C LANGUAGE=C LANG=C sudo chroot $TARGET/ update-rc.d exynos5-hwcomposer defaults
####################
}


function Finish()
{


    sudo sh -c "cat $TARGET'/etc/initramfs-tools/initramfs.conf' | sed s/'MODULES=most'/'MODULES=dep'/g> /tmp/a.conf"
    sudo mv /tmp/a.conf $TARGET'/etc/initramfs-tools/initramfs.conf'

    LC_ALL=C LANGUAGE=C LANG=C sudo chroot $TARGET/ service ntp stop
    LC_ALL=C LANGUAGE=C LANG=C sudo chroot $TARGET/ service ssh stop


    sudo sh -c "cat $TARGET'/etc/inittab' | sed s/'id:2:initdefault:'/'id:3:initdefault:'/g> /tmp/b.conf"
    sudo mv /tmp/b.conf $TARGET'/etc/inittab'

    sudo sh -c "cat $TARGET'/etc/inittab' | sed s/'id:1:initdefault:'/'id:3:initdefault:'/g> /tmp/b.conf"
    sudo mv /tmp/b.conf $TARGET'/etc/inittab'

    sudo sh -c "echo 'FSCKFIX=yes'>> $TARGET'/etc/default/rcS'"
    #wget http://s3.armhf.com/dist/odroid/odroidxu-uboot.img
    #dd if=odroidxu-uboot.img of=$SDCARD bs=512 seek=1
    sudo umount -v $TARGET'/dev/pts'
    sudo umount -v $TARGET'/dev'
    sudo umount -v $TARGET'/sys'
    sudo umount -v $TARGET'/proc'

    sudo umount -v $TARGET'/boot'

    sudo rm $TARGET'/usr/sbin/policy-rc.d'

    sudo mv $TEMP_LOG $TARGET"/root/odroid.build"

    sudo umount -v $TARGET/
    sync
    sudo eject $SDCARD

    echo "----------------"
    echo "-= CARD READY =-"
    echo "----------------"


}

# Clear install: erase card and install from scratch
function ClearInstall()
{
    mkdir -v -p $WORKDIR >> $TEMP_LOG
    cd $WORKDIR >> $TEMP_LOG
    CreatePartitions
    BootstrapDebian
    PutKernelAndFirmware_U3
    Finish
}

function initialize()
{

    echo "*** Debian for ODROID-XU build ***" > $TEMP_LOG

    sudo apt-get install -y  qemu-user-static debootstrap u-boot-tools dosfstools parted >> $TEMP_LOG

    TARGET_DEV=$(whiptail --backtitle "Debian for ODROID-XU build script" --title "Select ODROID-XU device" --menu "Choose an target ODROID-XU device type" 15 40 5 \
    "ODROID-XU" "Target device: ODROID-XU." 3>&1 1>&2 2>&3)
    RET=$?
    if [ $RET -eq 1 ]; then
        exit 0
    fi

    echo "*** Selected target device: "$TARGET_DEV >> $TEMP_LOG

    export REMOVABLE_DEV=($(
        grep -Hv ^0$ /sys/block/*/removable |
        sed s/removable:.*$/device\\/uevent/ |
        xargs grep -H ^DRIVER=sd |
        sed s/device.uevent.*$/size/ |
        xargs grep -Hv ^0$ |
        cut -d / -f 4
    ))

    TARGET_MEDIA=$(for dev in ${REMOVABLE_DEV[@]} ;do
        echo $dev size:_$(
            sed -e s/\ *$//g </sys/block/$dev/size
        ) ;
    done)

    if [ -z "$TARGET_MEDIA" ]; then
        echo "No removable device found. exit."
        exit
    fi

    TARGET_MEDIA_DEV=$(whiptail --backtitle "Debian for ODROID-XU build script" --title "Select media device" --menu "Choose an microSD or eMMC" 15 40 5 \
    $TARGET_MEDIA 3>&1 1>&2 2>&3)
    RET=$?
    if [ $RET -eq 1 ]; then
        exit 0
    fi


    export SDCARD="/dev/"$TARGET_MEDIA_DEV

    TARGETNAME=$(whiptail --title "Config hostname" --inputbox "Target device hostname" 10 60 ODROID-XU 3>&1 1>&2 2>&3)
    RET=$?
    if [ $RET -eq 1 ]; then
        exit 0
    fi

    if (whiptail --backtitle "Debian for ODROID-XU build script" --title "READ THIS !!!" --defaultno --yesno "ODROID-XU Debian build script. This tool are given as-is without warranty.\nAll data on $SDCARD will be erased. Do you want to proceed" 8 78) then
        ClearInstall
    else
        exit
    fi
}

initialize
